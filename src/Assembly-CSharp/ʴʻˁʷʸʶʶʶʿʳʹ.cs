using System;
using System.Collections.Generic;
using StrikeCore;

public static class \u02B4\u02BB\u02C1\u02B7\u02B8\u02B6\u02B6\u02B6\u02BF\u02B3\u02B9
{
	public static int \u02B2\u02B4\u02B6\u02B8\u02C0\u02C0\u02B4\u02C0\u02B2\u02BE\u02BD<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, Note \u02B7\u02BF\u02B6\u02B3\u02C0\u02BE\u02BD\u02BF\u02C1\u02BA\u02BF, int \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6 = 0) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		if (\u02B7\u02BF\u02B6\u02B3\u02C0\u02BE\u02BD\u02BF\u02C1\u02BA\u02BF == null)
		{
			return -1;
		}
		foreach (ValueTuple<int, T> valueTuple in EnumerableRanges.EnumerateRangeIndexed<T>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6, int.MaxValue))
		{
			if (valueTuple.Item2 == null)
			{
				break;
			}
			if (valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE == \u02B7\u02BF\u02B6\u02B3\u02C0\u02BE\u02BD\u02BF\u02C1\u02BA\u02BF.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE && valueTuple.Item2.\u02BF\u02C0\u02B8\u02BB\u02BA\u02B8\u02B3\u02BA\u02B4\u02BB\u02BF == \u02B7\u02BF\u02B6\u02B3\u02C0\u02BE\u02BD\u02BF\u02C1\u02BA\u02BF.\u02BF\u02C0\u02B8\u02BB\u02BA\u02B8\u02B3\u02BA\u02B4\u02BB\u02BF)
			{
				return valueTuple.Item1;
			}
		}
		return -1;
	}

	public static int \u02BC\u02BF\u02C0\u02B9\u02B5\u02C1\u02C1\u02B9\u02BD\u02B8\u02B9<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, int \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA = 0) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		foreach (ValueTuple<int, T> valueTuple in EnumerableRanges.EnumerateRangeIndexed<T>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA, int.MaxValue))
		{
			int item = valueTuple.Item1;
			if (valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE > \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9)
			{
				return item;
			}
		}
		return 0;
	}

	public static T \u02B5\u02B5\u02B9\u02B6\u02BF\u02C0\u02B9\u02B8\u02B8\u02B8\u02C0<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, int \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA = 0) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		foreach (T t in EnumerableRanges.EnumerateRange<T>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA, int.MaxValue))
		{
			if (t.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE > \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9)
			{
				return t;
			}
		}
		return default(T);
	}

	public static int \u02C1\u02C1\u02B3\u02B3\u02C1\u02B8\u02B2\u02BE\u02B4\u02B6\u02B9<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, int \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA = 0) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		foreach (ValueTuple<int, T> valueTuple in EnumerableRanges.EnumerateRangeIndexed<T>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA, int.MaxValue))
		{
			int item = valueTuple.Item1;
			if (valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE > \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9)
			{
				return item - 1;
			}
		}
		return -1;
	}

	public static int \u02B4\u02B6\u02BE\u02C0\u02C1\u02BE\u02B5\u02BC\u02BE\u02BA\u02BD<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, int \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA = 2147483647, bool \u02B4\u02BC\u02B2\u02B9\u02BE\u02B5\u02BE\u02B9\u02BC\u02B5\u02BF = false) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		foreach (ValueTuple<int, T> valueTuple in EnumerableRanges.EnumerateRangeReversedIndexed<T>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA, 0))
		{
			int item = valueTuple.Item1;
			T item2 = valueTuple.Item2;
			if (item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE < \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 || (item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE <= \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 && \u02B4\u02BC\u02B2\u02B9\u02BE\u02B5\u02BE\u02B9\u02BC\u02B5\u02BF))
			{
				return item;
			}
		}
		return -1;
	}

	public static T \u02B7\u02B9\u02B2\u02BF\u02B7\u02BF\u02B2\u02C1\u02B4\u02B7\u02B2<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, int \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA = 2147483647, bool \u02B4\u02BC\u02B2\u02B9\u02BE\u02B5\u02BE\u02B9\u02BC\u02B5\u02BF = false) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		foreach (T t in EnumerableRanges.EnumerateRangeReversed<T>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA, 0))
		{
			if (t.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE < \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 || (t.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE <= \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 && \u02B4\u02BC\u02B2\u02B9\u02BE\u02B5\u02BE\u02B9\u02BC\u02B5\u02BF))
			{
				return t;
			}
		}
		return default(T);
	}

	public static int \u02B6\u02B2\u02C1\u02BF\u02B9\u02B5\u02C0\u02BA\u02B2\u02C1\u02BF<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, int \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA = 0) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		int num = \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9.\u02BC\u02BF\u02C0\u02B9\u02B5\u02C1\u02C1\u02B9\u02BD\u02B8\u02B9(\u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA);
		int num2 = ((num == -1) ? \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA : num);
		int num3 = \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9.\u02B4\u02B6\u02BE\u02C0\u02C1\u02BE\u02B5\u02BC\u02BE\u02BA\u02BD(\u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, num2, true);
		if (num3 == -1 && num == -1)
		{
			return -1;
		}
		if (num == -1)
		{
			return num3;
		}
		if (num3 == -1)
		{
			return num;
		}
		T t = \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9[num3];
		if (\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9[num].\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE - \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 > \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 - t.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE)
		{
			return num3;
		}
		return num;
	}

	public static T \u02B7\u02BE\u02C0\u02BC\u02C0\u02B5\u02B9\u02C1\u02BB\u02BB\u02B7<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02BA\u02B8\u02BB\u02BB\u02BF\u02B4\u02B4\u02B5\u02C1\u02BB\u02B9, uint \u02B2\u02BD\u02BB\u02B9\u02BB\u02B2\u02BB\u02B6\u02B6\u02BF\u02B2, uint \u02B3\u02B9\u02BA\u02B4\u02B7\u02BA\u02B6\u02BD\u02BE\u02B7\u02B3, int \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA = 0) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		int num = \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9.\u02BC\u02BF\u02C0\u02B9\u02B5\u02C1\u02C1\u02B9\u02BD\u02B8\u02B9(\u02BA\u02B8\u02BB\u02BB\u02BF\u02B4\u02B4\u02B5\u02C1\u02BB\u02B9, \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA);
		int num2 = ((num == -1) ? \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA : num);
		int num3 = \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9.\u02B4\u02B6\u02BE\u02C0\u02C1\u02BE\u02B5\u02BC\u02BE\u02BA\u02BD(\u02BA\u02B8\u02BB\u02BB\u02BF\u02B4\u02B4\u02B5\u02C1\u02BB\u02B9, num2, true);
		if (num3 == -1 && num == -1)
		{
			return default(T);
		}
		if (num == -1)
		{
			return \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9[num3];
		}
		if (num3 == -1)
		{
			return \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9[num];
		}
		T t = \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9[num3];
		T t2 = \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9[num];
		bool flag = \u02B2\u02BD\u02BB\u02B9\u02BB\u02B2\u02BB\u02B6\u02B6\u02BF\u02B2 > t.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE;
		bool flag2 = \u02B3\u02B9\u02BA\u02B4\u02B7\u02BA\u02B6\u02BD\u02BE\u02B7\u02B3 < t2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE;
		if (flag && flag2)
		{
			return default(T);
		}
		if (flag)
		{
			return t2;
		}
		if (flag2)
		{
			return t;
		}
		if (t2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE - \u02BA\u02B8\u02BB\u02BB\u02BF\u02B4\u02B4\u02B5\u02C1\u02BB\u02B9 > \u02BA\u02B8\u02BB\u02BB\u02BF\u02B4\u02B4\u02B5\u02C1\u02BB\u02B9 - t.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE)
		{
			return t;
		}
		return t2;
	}

	public static int \u02C1\u02B4\u02B5\u02BA\u02B7\u02B2\u02B2\u02BE\u02BB\u02BF\u02BF<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, ushort \u02B6\u02BB\u02BC\u02B4\u02BC\u02BB\u02BC\u02BD\u02BC\u02BF\u02BB, int \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA = 0) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		foreach (ValueTuple<int, T> valueTuple in EnumerableRanges.EnumerateRangeIndexed<T>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA, int.MaxValue))
		{
			int item = valueTuple.Item1;
			T item2 = valueTuple.Item2;
			if ((item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE > \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 || (item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE == \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 && item != \u02BB\u02BE\u02C1\u02BD\u02BA\u02C0\u02BD\u02BA\u02BB\u02BC\u02BA)) && (\u02B6\u02BB\u02BC\u02B4\u02BC\u02BB\u02BC\u02BD\u02BC\u02BF\u02BB & item2.\u02BF\u02C0\u02B8\u02BB\u02BA\u02B8\u02B3\u02BA\u02B4\u02BB\u02BF) != 0)
			{
				return item;
			}
		}
		return -1;
	}

	public static IEnumerable<ValueTuple<int, T>> \u02B6\u02BD\u02C0\u02BE\u02C0\u02BB\u02BA\u02BF\u02B2\u02B8\u02B3<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, uint \u02C0\u02BB\u02B9\u02C1\u02BB\u02C1\u02BB\u02B9\u02B4\u02BF\u02B8, int \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6 = 0) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		foreach (ValueTuple<int, T> valueTuple in EnumerableRanges.EnumerateRangeIndexed<T>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6, int.MaxValue))
		{
			if (valueTuple.Item2 != null)
			{
				if (valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE >= \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 && (valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE < \u02C0\u02BB\u02B9\u02C1\u02BB\u02C1\u02BB\u02B9\u02B4\u02BF\u02B8 || (valueTuple.Item2.\u02B7\u02B3\u02BD\u02B5\u02B3\u02B4\u02BC\u02B2\u02B4\u02C1\u02B2 == 0 && valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE == \u02C0\u02BB\u02B9\u02C1\u02BB\u02C1\u02BB\u02B9\u02B4\u02BF\u02B8)))
				{
					yield return valueTuple;
				}
				else if (valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE > \u02C0\u02BB\u02B9\u02C1\u02BB\u02C1\u02BB\u02B9\u02B4\u02BF\u02B8)
				{
					yield break;
				}
			}
		}
		EnumerableRanges.IndexedRangeEnumerator<T> indexedRangeEnumerator = default(EnumerableRanges.IndexedRangeEnumerator<T>);
		yield break;
	}

	public static IEnumerable<T> \u02B2\u02B7\u02BF\u02BF\u02B6\u02C1\u02BA\u02B6\u02B3\u02B2\u02BE<T>(this IList<T> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, uint \u02BD\u02C0\u02BA\u02BB\u02BA\u02BE\u02BD\u02B4\u02BB\u02BD\u02C0, int \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6 = 0) where T : class, \u02B6\u02BC\u02C0\u02C1\u02B2\u02B4\u02BF\u02BE\u02B5\u02B2\u02BB
	{
		uint tickEndPos = \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 + \u02BD\u02C0\u02BA\u02BB\u02BA\u02BE\u02BD\u02B4\u02BB\u02BD\u02C0;
		foreach (ValueTuple<int, T> valueTuple in EnumerableRanges.EnumerateRangeIndexed<T>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6, int.MaxValue))
		{
			if (valueTuple.Item2 != null)
			{
				if (valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE >= \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 && (valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE < tickEndPos || (valueTuple.Item2.\u02B7\u02B3\u02BD\u02B5\u02B3\u02B4\u02BC\u02B2\u02B4\u02C1\u02B2 == 0 && valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE == tickEndPos)))
				{
					yield return valueTuple.Item2;
				}
				else if (valueTuple.Item2.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE > tickEndPos)
				{
					yield break;
				}
			}
		}
		EnumerableRanges.IndexedRangeEnumerator<T> indexedRangeEnumerator = default(EnumerableRanges.IndexedRangeEnumerator<T>);
		yield break;
	}

	public static ushort \u02B3\u02BB\u02B8\u02B5\u02C1\u02B2\u02BE\u02B3\u02C1\u02BC\u02B3(this IList<Note> \u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, uint \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9, int \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6 = 0)
	{
		ushort num = 0;
		foreach (Note note in EnumerableRanges.EnumerateRange<Note>(\u02B9\u02BA\u02BC\u02BF\u02B2\u02B8\u02B9\u02BA\u02B2\u02B6\u02B9, \u02BE\u02B6\u02BE\u02B4\u02B2\u02B3\u02B5\u02B6\u02C1\u02B5\u02B6, int.MaxValue))
		{
			if (note.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE > \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9)
			{
				break;
			}
			if (note.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE <= \u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9 && (ulong)note.\u02B5\u02BF\u02B5\u02B2\u02BD\u02BD\u02BD\u02B5\u02B8\u02C0\u02BE + (ulong)((long)note.\u02B7\u02B3\u02BD\u02B5\u02B3\u02B4\u02BC\u02B2\u02B4\u02C1\u02B2) >= (ulong)\u02B5\u02BB\u02BC\u02C0\u02B5\u02C1\u02BF\u02BD\u02B5\u02B7\u02B9)
			{
				num |= note.\u02BF\u02C0\u02B8\u02BB\u02BA\u02B8\u02B3\u02BA\u02B4\u02BB\u02BF;
			}
		}
		return num;
	}
}
