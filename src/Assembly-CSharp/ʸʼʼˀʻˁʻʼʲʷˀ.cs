using System;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using Unity.Services.RemoteConfig;
using UnityEngine;

public static class \u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0
{
	private static bool \u02B6\u02B7\u02B4\u02B6\u02B8\u02BB\u02B3\u02B3\u02C1\u02BF\u02B2
	{
		[CompilerGenerated]
		set
		{
			\u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.<\u02BD\u02BE\u02B3\u02C1\u02B2\u02BE\u02B4\u02B7\u02B6\u02B6\u02BB>k__BackingField = value;
		}
	}

	private static string \u02B8\u02B6\u02B7\u02B8\u02B8\u02BD\u02BC\u02B2\u02B9\u02B4\u02C1(string \u02B9\u02C1\u02BA\u02BD\u02BB\u02B3\u02BF\u02B8\u02B9\u02B9\u02BB, string \u02C0\u02BC\u02B3\u02B4\u02B8\u02B7\u02BD\u02BE\u02B9\u02B9\u02B3)
	{
		return RemoteConfigService.Instance.appConfig.GetString(\u02B9\u02C1\u02BA\u02BD\u02BB\u02B3\u02BF\u02B8\u02B9\u02B9\u02BB, \u02C0\u02BC\u02B3\u02B4\u02B8\u02B7\u02BD\u02BE\u02B9\u02B9\u02B3);
	}

	public static string \u02BE\u02BA\u02B8\u02BC\u02B5\u02B7\u02C1\u02C1\u02BA\u02B3\u02B9
	{
		get
		{
			return \u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02B8\u02B6\u02B7\u02B8\u02B8\u02BD\u02BC\u02B2\u02B9\u02B4\u02C1("latestTestBuild", Application.version);
		}
	}

	public static string \u02B6\u02BB\u02B5\u02BB\u02B2\u02B4\u02C1\u02B4\u02BF\u02BE\u02B4
	{
		get
		{
			return \u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02B8\u02B6\u02B7\u02B8\u02B8\u02BD\u02BC\u02B2\u02B9\u02B4\u02C1("notSupportedTitle", "Build Not Supported");
		}
	}

	public static string \u02BC\u02BB\u02B3\u02B4\u02BE\u02B7\u02B2\u02BD\u02BC\u02B7\u02B9
	{
		get
		{
			return \u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02B8\u02B6\u02B7\u02B8\u02B8\u02BD\u02BC\u02B2\u02B9\u02B4\u02C1("notSupportedBody", "Build Not Supported");
		}
	}

	public static string \u02B2\u02BB\u02B9\u02B8\u02B5\u02B9\u02BF\u02B6\u02B7\u02BB\u02B5
	{
		get
		{
			return \u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02B8\u02B6\u02B7\u02B8\u02B8\u02BD\u02BC\u02B2\u02B9\u02B4\u02C1("testBuildRedirectUrl", "https://clonehero.net/");
		}
	}

	public static async Task \u02B9\u02BF\u02BF\u02B8\u02B4\u02B8\u02BA\u02B8\u02B9\u02B6\u02BC()
	{
		RemoteConfigService.Instance.SetEnvironmentID("production");
		RemoteConfigService.Instance.FetchCompleted += \u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02B9\u02B7\u02B6\u02BC\u02B2\u02BE\u02B2\u02BE\u02B8\u02B3\u02BA;
		await RemoteConfigService.Instance.FetchConfigsAsync<\u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02B8\u02BB\u02B5\u02B4\u02B7\u02B4\u02B2\u02B8\u02B6\u02B9\u02B9, \u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02BA\u02BF\u02B5\u02B7\u02C0\u02BA\u02B3\u02B2\u02B6\u02BF\u02C0>(default(\u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02B8\u02BB\u02B5\u02B4\u02B7\u02B4\u02B2\u02B8\u02B6\u02B9\u02B9), default(\u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02BA\u02BF\u02B5\u02B7\u02C0\u02BA\u02B3\u02B2\u02B6\u02BF\u02C0));
		Debug.Log("Remote config ready!");
	}

	private static void \u02B9\u02B7\u02B6\u02BC\u02B2\u02BE\u02B2\u02BE\u02B8\u02B3\u02BA(ConfigResponse \u02B9\u02B7\u02B4\u02B8\u02B7\u02BE\u02B5\u02B3\u02B4\u02BF\u02B5)
	{
		if (\u02B9\u02B7\u02B4\u02B8\u02B7\u02BE\u02B5\u02B3\u02B4\u02BF\u02B5.requestOrigin != ConfigOrigin.Default)
		{
			\u02B8\u02BC\u02BC\u02C0\u02BB\u02C1\u02BB\u02BC\u02B2\u02B7\u02C0.\u02B6\u02B7\u02B4\u02B6\u02B8\u02BB\u02B3\u02B3\u02C1\u02BF\u02B2 = true;
		}
	}

	public struct \u02BA\u02BF\u02B5\u02B7\u02C0\u02BA\u02B3\u02B2\u02B6\u02BF\u02C0
	{
	}

	public struct \u02B8\u02BB\u02B5\u02B4\u02B7\u02B4\u02B2\u02B8\u02B6\u02B9\u02B9
	{
	}
}
